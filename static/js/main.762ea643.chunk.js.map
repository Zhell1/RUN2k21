{"version":3,"sources":["ResponsiveDialog.js","getBsvPrice.js","checkOracleValue.js","copiedMessage.js","oracleCard.js","App.js","pursePayPresto.js","reportWebVitals.js","index.js"],"names":["ResponsiveDialog","props","React","useState","open","theme","useTheme","fullScreen","useMediaQuery","breakpoints","down","handleClose","Dialog","onClose","fullWidth","aria-labelledby","keepMounted","DialogContent","children","DialogActions","Button","onClick","color","autoFocus","get_bsvusd","a","bsvusd","fetch","method","then","response","json","p","ppi","l","TIMEOUT_MS","waitAndCheckValue","txid","callback_timeout","callback_successOracle","retry_every","timeout_ms","init_timestamp","Date","now","console","log","setTimeout","run","window","load","myRequest","sync","value","copyText","idtocopy","document","getElementById","select","setSelectionRange","execCommand","CopiedMessage","copiedmess","enqueueSnackbar","useSnackbar","handleClickVariant","variant","substr","Fragment","size","Run","useCardStyles","makeStyles","root","maxWidth","textAlign","margin","load_contract","origin","contract","OracleCard","classes","called_loadPrice","set_called_loadPrice","oracleRequestLocation","set_oracleRequestLocation","priceUSD","set_priceUSD","oracleValue","set_oracleValue","oracleOrigin","my_oracleRequest","oracle","location","my_oracle","loadPrice","isOpenPopup","set_isOpenPopup","isOpenPayPresto","set_isOpenPayPresto","handleOpenPayPresto","purse","set_prestoWidget","widgetname","successCallback","set_step","value2","step","oracleRequest","topay_usd","topay_satoshis","parseInt","tx","Transaction","update","export","pay","loadPayPresto","requestId","price","Card","className","Typography","title","description","Alert","severity","LinearProgress","href","target","rel","type","readOnly","id","style","opacity","maxSnack","language","a11yDark","wrapLongLines","Container","padding","textDecoration","CardActionArea","CardContent","gutterBottom","component","background","borderRadius","bsv","Presto","bsvjs","Paypresto","embed","pursePayPresto","this","rawtx","parents","utxos","i","inputs","length","push","prevTxId","toString","vout","outputIndex","satoshis","script","opreturn","Script","outputs","toASM","split","pushdata","decodeURIComponent","replace","data","to","Address","fromPublicKeyHash","fromBuffer","_scriptBuffer","getPublicKeyHash","create","key","mount","on","payment","paid","forge","pop","forEach","utxo","addInput","build","signTxIn","keyPair","KeyPair","fromPrivKey","PrivKey","fromString","owner","privkey","signedrawtx","getRawTx","blockchain","broadcast","err","pursePresto","RandomValueRequest_origin","App","jig","network","trust","app","activate","loadjig","display","AppBar","position","marginBottom","Toolbar","Grid","container","direction","justify","alignItems","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.762ea643.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\n\r\nexport default function ResponsiveDialog(props) {\r\n    /**\r\n     *              open              boolean\r\n     * (optional)   handleClose       callback\r\n     */\r\n  const [open, setOpen] = React.useState(props.open) // false\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\r\n /* function handleClickOpen() {\r\n    setOpen(true);\r\n  }\r\n  */\r\n\r\n  function handleClose() {\r\n    if(props.handleClose) props.handleClose() // callback\r\n  }\r\n  \r\n\r\n  return (\r\n    <div>\r\n    {/*}\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Open responsive dialog\r\n      </Button>\r\n    */}\r\n    <Dialog\r\n        fullScreen={fullScreen}\r\n        open={props.open}\r\n        onClose={handleClose}\r\n        fullWidth={true}\r\n        aria-labelledby=\"responsive-dialog-title\"\r\n        keepMounted={true} // keep mounted otherwise paypresto can't inject in it \r\n      >\r\n        <DialogContent>\r\n          {props.children}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import fetch from \"node-fetch\"\r\n\r\nexport async function get_bsvusd(){\r\n    let bsvusd = 170 // default value\r\n    //take the value of BSV from preev API\r\n    await fetch(\"https://api.preev.pro/v1/tickers/12eLTxv1vyUeJtp5zqWbqpdWvfLdZ7dGf8\",{ \r\n      method: 'GET'\r\n    })\r\n    .then((response) => { return response.json(); })\r\n    .then((json)  => {\r\n      bsvusd = json.p.ppi.l\r\n    })\r\n    return bsvusd\r\n}\r\n\r\n/*function keepLastTwoNonZeroValues(floatPrice){\r\n  let strDecimals = String(floatPrice).split('.')[1]\r\n  if (!strDecimals) {\r\n  \treturn parseFloat(floatPrice)\r\n  }\r\n  let nbdec = 0\r\n  let nbNonZerofound = 0\r\n  for(let i=0; i<strDecimals.length && nbNonZerofound<2; i++){\r\n    if(strDecimals[i] != \"0\"){\r\n      nbNonZerofound++\r\n    }\r\n    nbdec++\r\n  }\r\n  return parseFloat(floatPrice).toFixed(nbdec)\r\n}*/\r\n\r\n/*function satsToUsd(satoshis){\r\n  return keepLastTwoNonZeroValues(satoshis*bsvusd*1e-8)\r\n}*/\r\n","//import { run } from \"./App.js\"\r\n\r\n\r\nexport const TIMEOUT_MS = 20*1000 // for value set() by oracle\r\n\r\nexport async function waitAndCheckValue(txid, callback_timeout, callback_successOracle, retry_every=200, timeout_ms=TIMEOUT_MS, init_timestamp=null){\r\n\r\n    if(!init_timestamp){\r\n      init_timestamp = Date.now()\r\n      console.log(\"set timestamp at \",init_timestamp)\r\n    }\r\n  \r\n    setTimeout(async ()=>{\r\n          var run = window.run\r\n          // sync and check if .value != undefined\r\n          var myRequest = await run.load(txid+'_o1') // TODO make that better\r\n          await myRequest.sync()\r\n          var value = myRequest.value\r\n          \r\n          if(value){\r\n            console.log(\"success with value: myRequest=\",myRequest,\" \\n\\n value = \",value)\r\n            \r\n            callback_successOracle(value, txid)\r\n      \r\n          } else {\r\n            if(Date.now()-init_timestamp > timeout_ms) {\r\n                console.log(\"timedout at \",Date.now())\r\n                callback_timeout()\r\n            } else {\r\n                waitAndCheckValue(txid, callback_timeout, callback_successOracle, retry_every, timeout_ms, init_timestamp)\r\n            }\r\n          }\r\n    }, retry_every)\r\n  }","import React from 'react';\r\nimport './App.css';\r\nimport { Button } from '@material-ui/core';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nimport { useSnackbar } from 'notistack';\r\n\r\nfunction copyText(idtocopy) {\r\n    /* Get the text field */\r\n    var copyText = document.getElementById(idtocopy);\r\n  \r\n    /* Select the text field */\r\n    copyText.select();\r\n    copyText.setSelectionRange(0, 99999); /* For mobile devices */\r\n  \r\n    /* Copy the text inside the text field */\r\n    document.execCommand(\"copy\");\r\n}\r\n\r\nexport function CopiedMessage(props, copiedmess) {\r\n  /**\r\n   * props: idtocopy, copiedmess\r\n   */\r\n    const { enqueueSnackbar } = useSnackbar();\r\n  \r\n    const handleClickVariant = (variant) => () => {\r\n      // variant could be success, error, warning, info, or default\r\n      enqueueSnackbar('Copied '+props.copiedmess.substr(0,15)+'...', { variant });\r\n    };\r\n  \r\n    function clickCopy(){\r\n      copyText()\r\n      handleClickVariant('success')\r\n    }\r\n  \r\n    return (\r\n      <React.Fragment>\r\n        <span onClick={()=>copyText(props.idtocopy)}>\r\n          <Button variant=\"outlined\" size=\"small\" onClick={handleClickVariant('success')}>\r\n            <FileCopyIcon size=\"small\" color=\"primary\"/>\r\n            &nbsp; Copy origin\r\n          </Button>\r\n        </span>\r\n      </React.Fragment>\r\n    );\r\n  }","import React, { useState } from 'react';\r\nimport { Button, Container } from '@material-ui/core';\r\nimport ResponsiveDialog from \"./ResponsiveDialog\";\r\nimport Card from '@material-ui/core/Card';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport SyntaxHighlighter from 'react-syntax-highlighter';\r\nimport { a11yDark } from 'react-syntax-highlighter/dist/esm/styles/hljs';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport { SnackbarProvider } from 'notistack';\r\n//import Run from \"run-sdk\";\r\n\r\nimport { get_bsvusd } from \"./getBsvPrice.js\"\r\nimport { waitAndCheckValue, TIMEOUT_MS } from \"./checkOracleValue.js\"\r\nimport { CopiedMessage } from \"./copiedMessage.js\"\r\n\r\nconst Run = window.Run\r\n\r\nconst useCardStyles = makeStyles({\r\n    root: {\r\n      maxWidth: 300,\r\n      textAlign: 'left',\r\n      margin: \"20px\",\r\n    }\r\n});\r\n\r\nconst exampleOfUse =\r\n`class MysteriousEgg extends Jig\r\n{ \r\n  init(){ \r\n    this.randomValue = new RandomValue()\r\n  }\r\n  hatch(){\r\n    let x = this.randomValue.value\r\n    // rarity between 1-99 but we make it super rare to get one near 100\r\n    this.rarity = parseInt(power(100,x*x*x), 10)\r\n  }\r\n}\r\nMysteriousEgg.deps = { RandomValue, power }\r\n\r\n// Timestamp Oracle idea => make an egg that can only be hatched on full moon\r\n`\r\n\r\nfunction createLink(requestId){\r\n    return \"https://run.network/explorer/?query=\"+requestId+\"&network=main\"\r\n  }\r\n\r\nasync function load_contract(origin){\r\n  \r\n    var run = window.run\r\n    console.log(\"run = \",run)\r\n    // load oracleRequests contracts\r\n    let contract = await run.load(origin)\r\n    await contract.sync()\r\n    await run.sync()\r\n    console.log(\"load_contracts(): contract = \",contract,\"for\",origin)\r\n    return contract\r\n}\r\n\r\nexport function OracleCard(props) {\r\n    /**\r\n     *  title, description, widgetname, oracleOrigin\r\n     */\r\n    const classes = useCardStyles();\r\n  \r\n    const [called_loadPrice, set_called_loadPrice] = useState(false)\r\n    const [oracleRequestLocation, set_oracleRequestLocation] = useState(null)\r\n    //const [satoshisPerCall, set_satoshisPerCall] = useState(\"loading\")\r\n    const [priceUSD, set_priceUSD] = useState(null)\r\n    const [oracleValue, set_oracleValue] = useState()\r\n  \r\n    async function loadPrice(){\r\n  \r\n      if(!props.oracleOrigin) return\r\n  \r\n      let my_oracleRequest = await load_contract(props.oracleOrigin) // load & sync\r\n  \r\n      console.log(\"my_oracleRequest = \",my_oracleRequest)\r\n      console.log(\"my_oracleRequest.oracle = \",my_oracleRequest.oracle)\r\n  \r\n      \r\n      set_oracleRequestLocation(my_oracleRequest.location)\r\n  \r\n      let my_oracle = my_oracleRequest.oracle\r\n      console.log(\"my_oracle 1 = \",my_oracle)\r\n      await my_oracle.sync()\r\n      console.log(\"my_oracle 2 = \",my_oracle)\r\n      set_priceUSD(my_oracle.priceUSD)\r\n      //let satoshis = my_oracle.satoshisPerCall\r\n      //set_satoshisPerCall(satoshis)\r\n    }\r\n  \r\n    if(!called_loadPrice){\r\n      setTimeout(()=>{\r\n        set_called_loadPrice(true)\r\n      },5000)\r\n      loadPrice()\r\n      // TODO there is probably a cleaner way to do this\r\n    }\r\n  \r\n  \r\n    const [isOpenPopup, set_isOpenPopup] = useState(false)\r\n    const handleClosedPopup = () => {\r\n      set_isOpenPopup(false)\r\n    }\r\n    const handleOpenPopup = () => {\r\n      set_isOpenPopup(true)\r\n    }\r\n  \r\n    // Paypresto popup\r\n    const [isOpenPayPresto, set_isOpenPayPresto] = useState(false)\r\n    const handleClosedPayPresto = () => {\r\n      set_isOpenPayPresto(false)\r\n    }\r\n    const handleOpenPayPresto = async () => {\r\n      \r\n      set_isOpenPayPresto(true)\r\n  \r\n      var run=window.run\r\n      run.purse.set_prestoWidget(props.widgetname, successCallback, run)\r\n  \r\n      set_step(\"clicked\")\r\n    }\r\n  \r\n    function callback_timeout(){\r\n      set_step(\"timedout\")\r\n    }\r\n  \r\n    async function callback_successOracle(value, txid)\r\n    {\r\n      var run=window.run\r\n      var myRequest = await run.load(txid+'_o1') // TODO make that better\r\n      await myRequest.sync()\r\n      set_oracleValue(myRequest.value)\r\n      var value2 = myRequest.value\r\n      set_step(\"response\")\r\n      console.log(\"callback_successOracle(): value=\",value,\" & value2=\",value2)\r\n    }\r\n  \r\n    function successCallback(txid){ // success payment\r\n      console.log(\"successCallback!! txid=\",txid)\r\n      set_step(\"paid\")\r\n      set_isOpenPayPresto(false)\r\n      \r\n      waitAndCheckValue(txid, callback_timeout, callback_successOracle)\r\n    }\r\n  \r\n    const [step, set_step] = useState(\"init\") // init, clicked, ready, paid, response, timedout\r\n  \r\n  \r\n    async function loadPayPresto(){\r\n\r\n      var run=window.run\r\n  \r\n      // RUN tx oracle request\r\n  \r\n      if(!oracleRequestLocation) return\r\n      var oracleRequest = await load_contract(oracleRequestLocation)\r\n  \r\n      // resync for safety\r\n      await oracleRequest.sync()\r\n      await run.sync()\r\n      //\r\n      let my_oracle = oracleRequest.oracle\r\n      console.log(\"my_oracle 1 = \",my_oracle)\r\n      await my_oracle.sync()\r\n      //\r\n      let topay_usd = my_oracle.priceUSD\r\n      let bsvusd = await get_bsvusd()\r\n      let topay_satoshis = parseInt(topay_usd / bsvusd * 1e8,10)\r\n      //\r\n      const tx = new Run.Transaction()\r\n      var myRequest\r\n      tx.update(()=>{\r\n        myRequest = new oracleRequest(topay_satoshis)\r\n      })\r\n      const rawtx = await tx.export({pay: true})\r\n  \r\n      console.log(\"handleOpenPayPresto(): myRequest = \",myRequest)\r\n      //pay(props.widgetname, successCallback) // old\r\n    }\r\n  \r\n    if(step==\"clicked\")\r\n    {\r\n      set_step(\"ready\")\r\n      loadPayPresto()\r\n    }\r\n  \r\n    //var price = (satoshisPerCall==\"loading\"?\"loading\":\"$\"+satsToUsd(satoshisPerCall))\r\n    var price = priceUSD?\"$\"+priceUSD:\"loading\"\r\n  \r\n    return(\r\n      <Card className={classes.root} >\r\n  \r\n          <ResponsiveDialog open={isOpenPopup} handleClose={handleClosedPopup}>\r\n              <Typography variant=\"h5\">\r\n                {props.title}\r\n              </Typography> \r\n             <br/>\r\n             {props.description} \r\n             <br/>\r\n             <br/>\r\n             Price {price}/call <br/><br/>\r\n  \r\n            {step==\"init\"?\r\n                <Button variant=\"contained\" color=\"primary\"\r\n                  onClick={handleOpenPayPresto}>\r\n                  TEST ORACLE\r\n                </Button>\r\n            :step==\"paid\"?\r\n              <div>\r\n                <Alert severity=\"info\">Sent, waiting for Oracle now... </Alert>\r\n                <LinearProgress />\r\n              </div>\r\n            :step==\"response\"?\r\n              <div>\r\n                <Alert severity=\"success\">Oracle responded with value: {oracleValue}</Alert>\r\n              </div>\r\n            :step==\"timedout\"?\r\n              <div>\r\n                <Alert severity=\"warning\">Request timed out after {parseInt(TIMEOUT_MS/1000, 10)} seconds, try again or contact admin.</Alert>\r\n              </div>\r\n            :\r\n              <Button variant=\"contained\" color=\"primary\"\r\n                onClick={handleOpenPayPresto}>\r\n                TEST ORACLE\r\n              </Button> \r\n            }\r\n  \r\n            <br/><br/>\r\n            Origin: \r\n            <br/>\r\n            <a href={createLink(props.oracleOrigin)} target=\"_blank\" rel=\"noopener noreferrer\">\r\n              {props.oracleOrigin}\r\n            </a>\r\n            <input type=\"text\" value={props.oracleOrigin} readOnly id={\"textToCopy_\"+props.oracleOrigin} style={{opacity:\"0\"}}></input>\r\n            <br/>\r\n            <SnackbarProvider maxSnack={3}>\r\n              <CopiedMessage idtocopy={\"textToCopy_\"+props.oracleOrigin} copiedmess={props.oracleOrigin}/>\r\n            </SnackbarProvider>\r\n            <br/><br/>\r\n            \r\n            Example of use:\r\n            <br/>\r\n            <SyntaxHighlighter language=\"javascript\" style={a11yDark} wrapLongLines=\"true\">\r\n              {exampleOfUse}\r\n            </SyntaxHighlighter>\r\n            <Container style={{padding: \"0px 178px\"}}>\r\n              <a href=\"https://github.com/Zhell1/RUN2k21\" style={{textDecoration: \"none\"}} target=\"_blank\" rel=\"noopener noreferrer\"><Button variant=\"contained\">See more on GitHub</Button></a>\r\n            </Container>\r\n            <ResponsiveDialog open={isOpenPayPresto} handleClose={handleClosedPayPresto}>\r\n              <div id={props.widgetname} className={props.widgetname}></div>\r\n            </ResponsiveDialog>\r\n  \r\n          </ResponsiveDialog>\r\n  \r\n  \r\n        <CardActionArea onClick={handleOpenPopup}>\r\n          <CardContent>\r\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n              {props.title}\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n              {props.description}\r\n            </Typography>\r\n            <br/>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n              <span style={{background: \"#3f51b5\", borderRadius: \"4px\", color: \"white\", padding: \"3px\"}}>\r\n                {price}\r\n              </span>\r\n            </Typography>\r\n          </CardContent>\r\n        </CardActionArea>\r\n      </Card>\r\n    )\r\n  }","import React, {useState} from 'react';\r\nimport './App.css';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n//import Run from \"run-sdk\"; // \"Error: assert failed\" in build\r\nimport { OracleCard } from \"./oracleCard.js\"\r\nimport { pursePayPresto } from \"./pursePayPresto.js\"\r\n\r\nconst Run = window.Run\r\nvar run\r\n\r\nconst pursePresto = new pursePayPresto()\r\n\r\nconst RandomValueRequest_origin = \"c968fc2674921d07c39051fa735e6a5ebbb69cc0b8b90232e76ae87e3d72101a_o2\"\r\nconst BSVUSDRequest_origin \t\t\t= \"c1f16893516de7824af5984aa343ce4df42d38b238b8b1dced2b1d3abb44361c_o2\"\r\nconst TimestampRequest_origin\t \t= \"fcbf7ad48704593f46c1d357d0d6913f442fc244c58c2ef0fef78cb15a5dac7e_o2\"\r\n\r\n\r\nfunction App() {\r\n\r\n  if(!run)\r\n    run = new Run({\r\n        network: 'main',\r\n        purse: pursePresto,\r\n        trust:\"*\",\r\n        app: \"RUN2K2021_Hackaton_RunCraft\",\r\n    })\r\n  run.activate()\r\n  window.run = run // make accessible in console\r\n  async function loadjig(){\r\n    var jig = await run.load(RandomValueRequest_origin)\r\n    console.log(\"jig = \",jig)\r\n    await jig.sync()\r\n    console.log(\"jig = \",jig)\r\n  }\r\n  loadjig()\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\" style={{display: 'block'}}>\r\n        <AppBar position=\"static\" style={{marginBottom: \"2em\"}}>\r\n          <Toolbar>\r\n            <Typography variant=\"h5\">\r\n              Oracles\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n\r\n        <Grid container direction=\"row\" justify=\"space-evenly\" alignItems=\"flex-start\">\r\n          <OracleCard title=\"Random Value Oracle\" description=\"This Oracle gives you a random value as a float between 0 and 1, same as Math.random() but for jigs.\" widgetname=\"oracle1\" oracleOrigin={RandomValueRequest_origin}/>\r\n          <OracleCard title=\"BSV/USD Price Oracle\" description=\"This Oracle gives you the current BSV price in USD\" price={0.01} widgetname=\"oracle2\" oracleOrigin={BSVUSDRequest_origin}/>\r\n          <OracleCard title=\"Timestamp Oracle\" description=\"This Oracle gives you the current timestamp in ms, same as Date.now() but for jigs.\" price={0.01} widgetname=\"oracle3\" oracleOrigin={TimestampRequest_origin}/>     \r\n        </Grid>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","//import {Presto, embed} from 'paypresto.js';\r\n\r\n//import { run } from \"./App.js\"\r\n\r\nconst bsv = window.bsv\r\nconst bsvjs  = window.bsvjs\r\nconst Run = window.Run\r\nconst Presto = window.Paypresto.Presto\r\nconst embed  = window.Paypresto.embed\r\n\r\nexport class pursePayPresto\r\n{\r\n    set_prestoWidget(widgetname, successCallback, run)\r\n    {\r\n      this.widgetname=widgetname\r\n      this.successCallback=successCallback\r\n      this.run=run\r\n    }\r\n    async pay(rawtx, parents) {\r\n        // process the raw transaction, outputs and UTXOs\r\n        const tx = new bsv.Transaction(rawtx)\r\n        let utxos = []\r\n        for(let i=0; i<tx.inputs.length; i++){\r\n          utxos.push({\r\n            txid: tx.inputs[i].prevTxId.toString('hex'),\r\n            vout: tx.inputs[i].outputIndex,\r\n            satoshis: parents[i].satoshis,\r\n            script: parents[i].script,\r\n          })\r\n        }\r\n        let opreturn = bsv.Script(tx.outputs[0].script).toASM().split(' ')\r\n        let pushdata = []\r\n        for(let i=2; i<opreturn.length; i++){\r\n          pushdata.push(decodeURIComponent(opreturn[i].replace(/\\s+/g, '').replace(/[0-9a-f]{2}/g, '%$&')))\r\n        }\r\n        let outputs = [{data: pushdata}]\r\n        for (let i=1; i<tx.outputs.length; i++){\r\n          outputs.push({\r\n            satoshis: tx.outputs[i].satoshis,\r\n            to: bsv.Address.fromPublicKeyHash(new bsv.Script.fromBuffer(tx.outputs[i]._scriptBuffer).getPublicKeyHash()).toString()\r\n          })\r\n        }\r\n    var payment = Presto.create({\r\n      key: 'Kx2p4o7FYJYjEwufdYJLXjPtu2vaSpQ8mB7mjMJnaHnPSrGQ1nQk', //  ephemeral private key for 1st tx\r\n      description: 'RUN2K21_Hackaton_RunCraft',\r\n      outputs: outputs,\r\n    })\r\n    payment.mount( embed('#'+this.widgetname, { style: ['rounded', 'border-thick'] }) )\r\n    .on('funded', async(payment) => {\r\n        const paid = payment.forge.inputs.pop()\r\n        utxos.forEach(utxo => payment.forge.addInput(utxo))\r\n        payment.forge.inputs.push(paid)\r\n        payment.forge.build()\r\n        const run = this.run\r\n        for(let i=0; i<payment.forge.inputs.length-1; i++){\r\n          payment.signTxIn(i, {keyPair: new bsv.KeyPair().fromPrivKey(new bsv.PrivKey().fromString(run.owner.privkey))})\r\n        }\r\n        payment.signTxIn(payment.forge.inputs.length-1, {keyPair: payment.keyPair})\r\n        const signedrawtx = payment.getRawTx()\r\n        let tx = await run.blockchain.broadcast(signedrawtx)\r\n        console.log('TX sent', tx)\r\n        this.successCallback(tx)\r\n    })\r\n    .on('error', err => {\r\n      console.log('Error: ', err)\r\n    })\r\n  }\r\n}","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}